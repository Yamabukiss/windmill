#!/usr/bin/env python3
# _*_ coding:utf-8 _*_

PACKAGE = "windmill"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
gen.add("score_thresh",double_t, 2, "score_thresh", 0.4,0.1, 1.0)


gen.add("red_lower_hsv_h",int_t, 0, "red_lower_hsv_h", 0,0, 180)
gen.add("red_lower_hsv_s",int_t, 0, "red_lower_hsv_s", 182,0, 255)
gen.add("red_lower_hsv_v",int_t, 0, "red_lower_hsv_v", 115,0, 255)
gen.add("red_upper_hsv_h",int_t, 0, "red_upper_hsv_h", 29,0, 180)
gen.add("red_upper_hsv_s",int_t, 0, "red_upper_hsv_s", 255,0, 255)
gen.add("red_upper_hsv_v",int_t, 0, "red_upper_hsv_v", 255,0, 255)

gen.add("blue_lower_hsv_h",int_t, 0, "blue_lower_hsv_h", 90,0, 180)
gen.add("blue_lower_hsv_s",int_t, 0, "blue_lower_hsv_s", 183,0, 255)
gen.add("blue_lower_hsv_v",int_t, 0, "blue_lower_hsv_v", 115,0, 255)
gen.add("blue_upper_hsv_h",int_t, 0, "blue_upper_hsv_h", 116,0, 180)
gen.add("blue_upper_hsv_s",int_t, 0, "blue_upper_hsv_s", 255,0, 255)
gen.add("blue_upper_hsv_v",int_t, 0, "blue_upper_hsv_v", 255,0, 255)

gen.add("hull_bias",double_t, 3, "hull_bias", 2.0,0.1, 3.0)
gen.add("min_area_threshold",int_t, 3, "area_threshold", 13,10, 100)
gen.add("max_area_threshold",int_t, 3, "area_threshold", 120,10, 500)

gen.add("morph_iterations",int_t, 0, "morph_iterations", 1,1, 10)

size_enum = gen.enum([ gen.const("MORPH_ERODE",      int_t, 0, "0"),
					   gen.const("MORPH_DILATE",     int_t, 1, "1"),
					   gen.const("MORPH_OPEN",     int_t, 2, "2"),
					   gen.const("MORPH_CLOSE",     int_t, 3, "3"),
					   gen.const("MORPH_GRADIENT",     int_t, 4, "4"),
					   gen.const("MORPH_TOPHAT",      int_t, 5, "5"),
					   gen.const("MORPH_BLACKHAT",      int_t, 6, "6"),
					   gen.const("MORPH_HITMISS",      int_t, 7, "7")],
					   "An enum to set morph type")

gen.add("morph_type", int_t, 0, "morph_type", 1, 0, 7, edit_method=size_enum)
gen.add("morph_size", int_t, 0, "morph_size", 1, 0, 4)
gen.add("area_duty", double_t, 0, "area_duty", 0.7, 0.0, 1.0)



exit(gen.generate(PACKAGE, PACKAGE, "dynamic"))